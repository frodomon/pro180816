#wid-id-0.jarviswidget{"data-widget-colorbutton" => "false", "data-widget-editbutton" => "false"}
  %header
    %span.widget-icon
      %i.fa.fa-eye
    %h2 Producto
  .widget-body
    = simple_form_for([@product], html: {class: 'form-horizontal smart-form', autocomplete: 'off' }) do |f|
      %fieldset
        .row
          %section.col.col-md-5
            %label.label Nombre
            %label.input{for: "name"}
              = f.text_field :name, placeholder: "Nombre", input_html: { class: 'form-control' }, label: false
          %section.col.col-md-5
            %label.label Marca
            %label.input{for: "trademark"}
              = f.text_field :trademark, placeholder: "Marca", input_html: { class: 'form-control' }, label: false    
        .row
          %section.col.col-md-5
            %label.label Unidad de Medida
            %label.input{for: "unit_of_measurement"}
              = f.text_field :unit_of_measurement, placeholder: "Unidad de Medida", input_html: { class: 'form-control' }, label: false
          %section.col.col-md-5
            %label.label Categoría
            %select.form-control#category-select{:name =>"product[category_id]", :required => true}
              %option{:value => "", :rel => ""}
                Seleccione
              - @categories.each do |x|
                %option{:value => "#{x.id}"}
                  = x.name.to_s
        .row  
          %section.col.col-md-10
            %label.label Descripción
            %label.input{for: "description"}
              = f.text_field :description, placeholder: "Ingresa una descripción del producto", input_html: { class: 'form-control' }, label: false
        
      %footer
        %button.btn.btn-primary{type: "submit"}
          %i.fa.fa-save
            Guardar

:javascript
  
  $(document).ready(function () {
    if($('form[id^="edit_"]').length > 0) {
      submit_validate($('form[id^="edit_"]')); 
      id = "#{ @product.category_id.to_json }"; 
      $('#category-select option[value="'+id+'"]').prop('selected', 'selected')
    }else{
      submit_validate($('#new_product'));
    }
  });

  function submit_validate(form){
    $(form['selector']).ajaxForm({
      beforeSubmit: function() {
        $(form['selector']).validate({
          // Rules for form validation
          rules : {
            'product[name]' : {
              required : true
            },
            'product[unit_of_measurement]' : {
              required : true
            },
            'product[quantity]'  : {  
              required : true,
            }
          },

          // Messages for form validation
          messages : {
            'product[name]' : {
              required : 'Por favor, ingresar el nombre o razon social.'
             },
            'product[unit_of_measurement]' : {
              required : 'Por favor, ingresar la unidad de medida.'
             },
            'product[quantity]' : {
              required : 'Por favor, ingresar la cantidad.'
             }
          },

          // Do not change code below
          errorPlacement : function(error, element) {
            error.insertAfter(element.parent());
          }
        });
        // Remove all Help-inLine
        $(".help-inline").remove();
        // Client Valid
        return $(form['selector']).valid();
      },
      target: '#content',
      success: function (data){
        $(".help-inline").parent().addClass("state-error");
      },
      error: function(xhr, status, error) {
      }
    });
  }