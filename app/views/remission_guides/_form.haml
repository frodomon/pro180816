#wid-id-0.jarviswidget{"data-widget-colorbutton" => "false", "data-widget-editbutton" => "false"}
  %header
    %span.widget-icon
      %i.fa.fa-eye
    %h2 Formato
  .widget-body
    = simple_form_for([@remission_guide], html: {class: 'form-horizontal smart-form', autocomplete: 'off' }) do |f|
      %fieldset
        .row
          %section.col.col-2
          %section.col.col-2
            %label.label Código
            %label.input{for: "devtime"}
              = f.input :code, input_html: { class: 'form-control'}, label: false
          %section.col.col-2
            %label.label Punto de Partida
            %label.input{for: "devtime"}
              = f.input :initial_point, input_html: { class: 'form-control'}, label: false
          %section.col.col-2
            %label.label Punto de Llegada
            %label.input{for: "devtime"}
              = f.input :final_point, input_html: { class: 'form-control'}, label: false
          %section.col.col-2
            %label.label Fecha
            %label.input{for: "date_of_issue"}
              = f.input :date_of_issue, as: :string, input_html: { class: 'form-control', :type => "date", :value => @today}, label: false
        .row
          %section.col.col-2
          %section.col.col-4
            %label.label Clientes
            %select.form-control#client-select{:name =>"remission_guide[client_id]", :required => true}
              %option{:value => "", :rel => ""}
                Seleccione
              - @clients.each do |x|
                %option{:value => "#{x.id}"}
                  = x.name.to_s
          %section.col.col-4
            %label.label Transporte
            %select.form-control#client-select{:name =>"remission_guide[transport_id]", :required => true}
              %option{:value => "", :rel => ""}
                Seleccione
              - @transports.each do |x|
                %option{:value => "#{x.id}"}
                  = x.plate.to_s
        .row
          .col-lg-11{'style'=>'margin-left:3%'}
            .row{ :style => "margin-top:5%;"}
              %section.col.col-md-1
                %label.label Articulos
              %section.col.col-md-4
                %select.form-control#article-select{:name =>"article_id", :required => false}
                  %option{:value => "", :rel => ""}
                    Seleccione
                  - @articles.each do |x|
                    %option{:value => "#{x.id}"}
                      = x.name.to_s
              %a(href="javascript:add_item();" id="btn-add-item" class="btn btn-success" role="button" style="float:left")
                Agregar Articulo
            .row
              %table.has-tickbox(class="table table-condensed table-bordered table-striped table-hover dataTable" style="font-size: 12px;" id="summary-items" aria-describedby="data-table_info")
                %thead
                  %tr
                    %th Descripción
                    %th Unidad de Medida
                    %th Cantidad Total
                    %th X
                %tbody(id="_items_table")
      %footer
        %button.btn.btn-primary{type: "submit"}
          %i.fa.fa-save
            Guardar

:javascript
  $(document).ready(function () {
    document.onkeypress = stopRKey;
    if($('form[id^="edit_"]').length > 0) {
      submit_validate($('form[id^="edit_"]'));
    }else{
      submit_validate($('#new_remission_guide'));
    }
    $("#client_code").keypress(function (e) {
     //if the letter is not digit then display error and don't type anything
      if (e.which != 8 && e.which != 0 && (e.which < 48 || e.which > 57)) {
        //display error message
        $("#errmsg").html("Digits Only").show().fadeOut("slow");
          return false;
      }
    });
  });

  function submit_validate(form){
    $(form['selector']).ajaxForm({
      beforeSubmit: function() {
        $(form['selector']).validate({
          // Rules for form validation
          rules : {
            'cost_structure[money_id]' : {
              required : true
            },
            'cost_structure[devtime]' : {
              required : true
            }
          },

          // Messages for form validation
          messages : {
            'cost_structure[money_id]' : {
              required : 'Por favor, seleccione una moneda.'
             },
            'cost_structure[devtime]' : {
              required : 'Por favor, el tiempo no puede estar vacío.'
             }
          },

          // Do not change code below
          errorPlacement : function(error, element) {
            error.insertAfter(element.parent());
          }
        });
        // Remove all Help-inLine
        $(".help-inline").remove();
        // Client Valid
        return $(form['selector']).valid();
      },
      target: '#content',
      success: function (data){
        $(".help-inline").parent().addClass("state-error");
      },
      error: function(xhr, status, error) {
      }
    });
  }
  function add_item(){
    str_item = {authenticity_token: "#{form_authenticity_token}",article_id: $('#article-select').val()};

    append_url_ajax('#{add_item_remission_guides_path}', "_items_table", str_item, 0, 'POST');

    var mySelect = document.getElementById('article-select');
    mySelect.selectedIndex = 0;
  }


  function delete_item(code){
    $("#tr" + code).remove();
    sumarventa();
  }

  function stopRKey(evt) { 
    var evt = (evt) ? evt : ((event) ? event : null); 
    var node = (evt.target) ? evt.target : ((evt.srcElement) ? evt.srcElement : null); 
    if ((evt.keyCode == 13) && (node.type=="text"))  {return false;} 
  }